plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'lkd.namsic'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.vault:spring-vault-core:3.1.1'
	implementation 'org.springframework.cloud:spring-cloud-starter-vault-config:4.1.2'
	implementation 'io.sentry:sentry-spring-boot-starter-jakarta:7.14.0'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.4.1'
	implementation 'io.sentry:sentry-logback:7.14.0'

	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'
	implementation 'com.github.gavlyukovskiy:datasource-proxy-spring-boot-starter:1.9.1'

	implementation 'org.bouncycastle:bcprov-jdk15to18:1.78.1'
	implementation 'commons-io:commons-io:2.16.1'
	implementation 'org.apache.commons:commons-lang3:3.15.0'
	implementation 'org.jetbrains:annotations:24.1.0'

	annotationProcessor 'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api:3.0.0'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'

	compileOnly 'org.projectlombok:lombok'

	testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
	systemProperty "spring.profiles.active", System.properties['spring.profiles.active']
	systemProperty "VAULT_TOKEN", System.properties['VAULT_TOKEN']
}
